{"version":3,"sources":["images/restaurant-2.jpg","images/shareFacebook.jpg","images/gif/loading-arrow.gif","components/Hero.js","components/Banner.js","pages/Error.js","context.js","components/Starts.js","components/SocialMediaButtons.js","pages/SingleRestaurant.js","components/Loading.js","components/Title.js","components/RestaurantsFilter.js","components/Restaurant.js","components/RestaurantsList.js","components/RestaurantContainer.js","pages/Restaurants.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","children","hero","className","defaultProps","Banner","title","subtitle","Error","to","process","RestaurantContext","React","createContext","RestaurantProvider","state","restaurants","sortedRestaurants","featuredRestaurant","loading","ratingFilter","alphabeticallyFilter","getRestaurant","slug","find","restaurant","id","handleChange","event","target","value","type","checked","name","setState","filterRestaurants","tempRestaurants","sort","a","b","rating","localeCompare","this","formatData","items","map","item","Provider","props","Component","RestaurantConsumer","Consumer","Starts","length","stars","i","len","push","x","key","SocialMediaButtons","contact","quote","FacebookShareButton","url","hashtag","src","ShareFacebook","alt","SingleRestaurant","console","log","match","params","defaultBcg","context","address","href","rel","contextType","Loading","loadingGif","Title","RestaurantsFilter","useContext","onChange","htmlFor","Restaurant","memo","defaultImg","RestaurantsList","withRestaurantConsumer","Restaurants","RestaurantContainer","Navbar","isOpen","handleToggle","onClick","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a433273b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restaurant-2.ae3bbefb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shareFacebook.ebc1ed97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-arrow.e9ea7394.gif\";","import React from \"react\";\n\nconst Hero = ({ children, hero }) => {\n  return <header className={hero}>{children}</header>;\n};\n\nexport default Hero;\n\nHero.defaultProps = {\n  hero: \"defaultHero\"\n};","import React from \"react\";\nconst Banner = ({ children, title, subtitle }) => {\n  return (\n    <div className=\"banner\">\n      <h1>{title}</h1>\n      <div />\n      <p>{subtitle}</p>\n      {children}\n    </div>\n  );\n};\n\nexport default Banner;","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Banner from \"../components/Banner\";\nimport { Link } from \"react-router-dom\";\nconst Error = () => {\n  return (\n    <Hero>\n      <Banner title=\"404\" subtitle=\"page not found\">\n        <Link to={process.env.PUBLIC_URL+\"/\"}className=\"btn-primary\">\n          return home\n        </Link>\n      </Banner>\n    </Hero>\n  );\n};\n\nexport default Error;","import React, { Component } from \"react\";\nimport items from \"./data_melp.json\";\n\n\nconst RestaurantContext = React.createContext();\n\nexport default class RestaurantProvider extends Component {\n  state = {\n    restaurants: [],\n    sortedRestaurants: [],\n    featuredRestaurant: [],\n    loading: true,\n    //\n    ratingFilter:false,\n    alphabeticallyFilter:false\n  };\n\n\n  componentDidMount() {\n      let restaurants = this.formatData(items);\n      let featuredRestaurant = restaurants.sort((a, b) => b.rating - a.rating);\n      \n    this.setState({\n      restaurants,\n      featuredRestaurant,\n      sortedRestaurants: restaurants,\n      loading: false\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n    let id = item.id;\n  \n\n    let restaurant = { ...item, id };\n    return restaurant;\n\n  });\n  return tempItems;\n  }\n\n  getRestaurant = slug => {\n    let tempRestaurants = [...this.state.restaurants];\n    const restaurant = tempRestaurants.find(restaurant => restaurant.id === slug);\n    return restaurant;\n  };\n\n  handleChange = event => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState(\n      {\n        [name]: value\n      },\n      this.filterRestaurants\n    );\n  };\n  filterRestaurants = () => {\n    let {\n      restaurants,\n      ratingFilter,\n      alphabeticallyFilter\n    } = this.state;\n\n    let tempRestaurants = [...restaurants];\n\n    if(ratingFilter){\n      tempRestaurants.sort((a, b) => a.rating - b.rating);\n    }\n    if(alphabeticallyFilter){\n      tempRestaurants.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    this.setState({\n      sortedRestaurants: tempRestaurants\n    });\n  };\n  render() {\n    return (\n      <RestaurantContext.Provider \n        value={{\n          ...this.state,\n          getRestaurant: this.getRestaurant,\n          handleChange: this.handleChange\n        }}\n      >\n        {this.props.children}\n      </RestaurantContext.Provider>\n    );\n  }\n}\nconst RestaurantConsumer = RestaurantContext.Consumer;\n\nexport { RestaurantProvider, RestaurantConsumer, RestaurantContext };\n\nexport function withRestaurantConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <RestaurantConsumer>\n        {value => <Component {...props} context={value} />}\n      </RestaurantConsumer>\n    );\n  };\n}","import React from \"react\";\nimport { AiFillStar,AiOutlineStar } from \"react-icons/ai\";\n\nconst Starts = ({ rating }) => {\n\n    if (rating.length === 0) {\n        return (\n            <span><AiOutlineStar /></span>\n        );\n      }\n      var stars = [], i = 0, len = rating;\n      while (++i <= len) stars.push(i);\n      return (\n        <span>\n            {stars.map((x, i) => {\n              return <AiFillStar key={i}/>;\n            })}\n        </span>\n      );\n\n};\n\nexport default Starts;","import React from \"react\";\nimport {FacebookShareButton} from \"react-share\";\nimport ShareFacebook from \"../images/shareFacebook.jpg\";\n       \nexport default function SocialMediaButtons({ restaurant}) {\n    const {\n        name,\n        contact\n      } = restaurant;\n    const quote = \"Restaurant: \" + name\n       return (\n           \n             <FacebookShareButton \n                url={contact['email']}\n                quote={quote}\n                hashtag=\"#MelpOnlyTheBest\"\n                >\n                 <img src={ShareFacebook} alt='Share' className='facebook-img'/>\n              </FacebookShareButton>\n\n              \n       );\n}","import React, { Component } from \"react\";\nimport defaultBcg from \"../images/restaurant-2.jpg\";\nimport Hero from \"../components/Hero\";\nimport Banner from \"../components/Banner\";\nimport { Link } from \"react-router-dom\";\nimport { RestaurantContext } from \"../context\";\nimport { CgWebsite } from \"react-icons/cg\";\nimport { HiOutlineMail } from \"react-icons/hi\";\nimport { FiPhoneCall } from \"react-icons/fi\";\nimport Starts from \"../components/Starts\"\nimport SocialMediaButtons from \"../components/SocialMediaButtons\";\n\nexport default class SingleRestaurant extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      slug: this.props.match.params.slug,\n      defaultBcg: defaultBcg\n    };\n  }\n  static contextType = RestaurantContext;\n\n  render() {\n    const { getRestaurant } = this.context;\n    const restaurant = getRestaurant(this.state.slug);\n\n    if (!restaurant) {\n      return (\n        <div className=\"error\">\n          <h3> no such restaurant could be found...</h3>\n          <Link to={process.env.PUBLIC_URL+\"/\"} className=\"btn-primary\">\n            back to Home\n          </Link>\n        </div>\n      );\n    }\n    const {\n      name,\n      rating,\n      contact,\n      address\n    } = restaurant;\n\n    return (\n      <>\n        <Hero hero=\"restaurantsHero\">\n          <Banner title={`${name} restaurant`}>\n            <Link to={process.env.PUBLIC_URL+\"/\"} className=\"btn-primary\">\n              back to home\n            </Link>\n          </Banner>\n        </Hero>\n        <section className=\"single-restaurant\">\n          <div className=\"single-restaurant-info\">\n            <article className=\"desc\">\n              <h3>Rating</h3>\n              <h3>\n              <Starts rating={rating} />\n              </h3>\n            </article>\n          </div>\n        </section>\n        <section className=\"single-restaurant\">\n          <div className=\"single-restaurant-info\">\n            <article className=\"desc\">\n              <h3>contact</h3>\n              <h6><CgWebsite /> site : <a href={contact['site']} rel=\"noopener noreferrer\"  target=\"_blank\">{contact['site']}</a>\n              </h6>\n              <h6><HiOutlineMail /> email : {contact['email']}</h6>\n              <h6><FiPhoneCall /> phone : {contact['phone']}</h6>\n            </article>\n            <article className=\"desc\">\n              <h3>address</h3>\n              <h6> city : {address['state']}, {address['city']}</h6>\n              <h6> street : {address['street']}</h6>\n            </article>\n          </div>\n        </section>\n        <section className=\"restaurant-extras\">\n        <h6><SocialMediaButtons restaurant={restaurant}/></h6>\n        </section>\n      </>\n    );\n  }\n}","import React from \"react\";\nimport loadingGif from \"../images/gif/loading-arrow.gif\";\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <h4>restaurants data loading....</h4>\n      <img src={loadingGif} alt=\"\" />\n    </div>\n  );\n};\n\nexport default Loading;","import React from \"react\";\n\nconst Title = ({ title }) => {\n  return (\n    <div className=\"section-title\">\n      <h4>{title}</h4>\n      <div />\n    </div>\n  );\n};\n\nexport default Title;","import React from \"react\";\nimport { useContext } from \"react\";\nimport { RestaurantContext } from \"../context\";\nimport Title from \"./Title\";\n\nconst RestaurantsFilter = ({ restaurants }) => {\n\n  const context = useContext(RestaurantContext);\n\n  const {\n    handleChange,\n    ratingFilter,\n    alphabeticallyFilter\n  } = context;\n\n\n  return (\n    <section className=\"filter-container\">\n      <Title title=\"restaurants\" />\n      <form className=\"filter-form\">\n   \n        <div className=\"form-group\">\n          <div className=\"single-extra\">\n            <input\n              type=\"checkbox\"\n              name=\"ratingFilter\"\n              id=\"raiting\"\n              checked={ratingFilter}\n              onChange={handleChange}\n            />\n            <label htmlFor=\"breakfast\">Order by Rating</label>\n          </div>\n          <div className=\"single-extra\">\n            <input\n              type=\"checkbox\"\n              name=\"alphabeticallyFilter\"\n              checked={alphabeticallyFilter}\n              onChange={handleChange}\n            />\n            <label htmlFor=\"alphabetically\">Order alphabetically</label>\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default RestaurantsFilter;"," \nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport defaultImg from \"../images/restaurant-2.jpg\";\nimport PropTypes from \"prop-types\";\nimport { memo } from \"react\";\nimport Starts from \"./Starts\"\n\nconst Restaurant = memo(({ restaurant }) => {\n  const { name, id, rating,address } = restaurant;\n  \n  return (\n    <article className=\"restaurant\">\n      <div className=\"img-container\">\n        <img src={defaultImg} alt=\"single restaurant\" />\n        <div className=\"price-top\">\n          <h6>Rating \n          <Starts rating={rating} />\n          </h6>\n        </div>\n        <Link to={process.env.PUBLIC_URL +`/restaurants/${id}`} className=\"btn-primary restaurant-link\">\n          Detail\n        </Link>\n      </div>\n      <p className=\"restaurant-info\">{name}</p>\n      <p className=\"restaurant-info\">Ciudad : {address['city']}</p>\n    </article>\n  );\n});\n\nRestaurant.propTypes = {\n    restaurant: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })\n};\nexport default Restaurant;","import React from \"react\";\nimport Restaurant from \"./Restaurant\";\n\nconst RestaurantsList = ({ restaurants }) => {\n\n  if (restaurants.length === 0) {\n    return (\n      <div className=\"empty-search\">\n        <h3>unfortunately no restaurants matched your search parameters</h3>\n      </div>\n    );\n  }\n  return (\n    <section className=\"restaurantslist\">\n      <div className=\"restaurantslist-center\">\n        {restaurants.map(item => {\n          return <Restaurant key={item.id} restaurant={item} />;\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default RestaurantsList;","import React from \"react\";\nimport { withRestaurantConsumer } from \"../context\";\nimport Loading from \"./Loading\";\nimport RestaurantsFilter from \"./RestaurantsFilter\";\nimport RestaurantsList from \"./RestaurantsList\";\n\n\nfunction RestaurantsContainer({ context }) {\n  const { loading, sortedRestaurants, restaurants } = context;\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <RestaurantsFilter restaurants={restaurants} />\n      <RestaurantsList restaurants={sortedRestaurants} />\n    </>\n  );\n}\nexport default withRestaurantConsumer(RestaurantsContainer);","\nimport React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Banner from \"../components/Banner\";\n\nimport RestaurantContainer from \"../components/RestaurantContainer\";\n\nconst Restaurants = () => {\n  return (\n    <>\n      <Hero hero=\"restaurantsHero\">\n      <Banner\n          title=\"The best restaurants in the city\"\n          subtitle=\"MELP Reviews\">\n        </Banner>\n      </Hero>\n      <RestaurantContainer />\n    </>\n  );\n};\n\nexport default Restaurants;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaAlignRight } from \"react-icons/fa\";\nexport default class Navbar extends Component {\n  state = {\n    isOpen: false\n  };\n  handleToggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"nav-center\">\n          <div className=\"nav-header\">\n            <button\n              type=\"button\"\n              className=\"nav-btn\"\n              onClick={this.handleToggle}\n            >\n              <FaAlignRight className=\"nav-icon\" />\n            </button>\n          </div>\n          <ul\n            className={this.state.isOpen ? \"nav-links show-nav\" : \"nav-links\"}\n          >\n            <li>\n              <Link to={process.env.PUBLIC_URL + '/'}>Home</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Error from \"./pages/Error\";\nimport SingleRestaurant from \"./pages/SingleRestaurant\"\nimport Restaurants from \"./pages/Restaurants\";\nimport Navbar from \"./components/Navbar\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={Restaurants} />\n        <Route exact path={process.env.PUBLIC_URL +\"/restaurants/\"} component={Restaurants} />\n        <Route exact path={process.env.PUBLIC_URL+\"/restaurants/:slug\"} component={SingleRestaurant} />\n        <Route component={Error} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { RestaurantProvider } from \"./context\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <RestaurantProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </RestaurantProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}